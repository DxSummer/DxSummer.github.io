{"per_page":10,"total":3,"current":3,"data":[{"title":"hexo详解","date":"2020-04-17T07:40:55.000Z","date_formatted":{"ll":"Apr 17, 2020","L":"04/17/2020","MM-DD":"04-17"},"excerpt":"<h1 id=\"hexo你的博客-待修改\">hexo你的博客 待修改<a href=\"#hexo你的博客-待修改\" title=\"hexo你的博客 待修改\"></a></h1><p>一直纠结于哪里写博客，曾用过新浪博客，百度空间，JavaEye，LOFTER，OSChina，cnblogs，CSDN，自搭WordPress，都不满意。再后来也弄过Jekyll和Octopress，觉累不爱。</p>\n<p>直到多看了一眼hexo，这个逼格极高的程序猿写作方式，我喜欢。就连hexo的发音都像是黑客哦！如果你跟我一样纠结哪里写博，那就来到GitHub吧，让我们一起hexo！H人希绝对不会让你失望，相信很快hexo就会流行起来。</p>\n<p>hexo出自台湾大学生tommy351之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。先看看tommy是如何吐槽Octopress的 →＿→ Hexo颯爽登場。</p>\n<p>如果你对默认配置满意，只需几个命令便可秒搭一个hexo。<br>如果你跟我一样喜欢折腾下，30分钟也足够个性化。<br>如果你过于喜欢折腾，可以折腾个把星期，尽情的玩。<br>搭建过程你或许觉得有那么点小繁琐，但一旦搭建完成，写文章是极简单，极舒服的。</p>\n<p>只需要几个简单命令，你就可以完成一切。</p>\n<p>hexo n #写文章<br>hexo g #生成<br>hexo d #部署 # 可与hexo g合并为 hexo d -g</p>\n<p>下面逐步介绍，进入正题。</p>\n<p>环境准备<br>安装Node<br>到Node.js官网下载相应平台的最新版本，一路安装即可。我用的是node-v0.10.22-x86.msi</p>\n<p>安装Git<br>Git的客户端很多，我用的是msysgit，喜欢用绿色版本Portable application for official Git for Windows 1.8.4，下载下来设置一下环境变量即可，Git_HOME，%Git_HOME%\\bin之类的，不多说。</p>\n<p>安装Sublime（可选）<br>Sublime Text 2在这里仅仅作为一个文本编辑器使用，支持各种编程语言和文件格式，当然也支持Markdown语法，实在是个不可多得的练码奇才。喜欢追鲜的也可以尝试处于beta版本的Sublime Text 3。我用绿色版本Portable Sublime Text 2.0.2.zip。</p>\n<p>本屌是穷码畜，对于高大上的Mac码帅用户请移步：hexo installation</p>\n<p>GitHub<br>GitHub账号和GitHub Pages 一般都应该有吧，已有的请自动无视这一部分。</p>\n<p>首先注册一个『GitHub』帐号，已有的默认默认请忽略<br>建立与你用户名对应的仓库，仓库名必须为『your_user_name.github.com』<br>添加SSH公钥到『Account settings -&gt; SSH Keys -&gt; Add SSH Key』<br>my GitHub Pagesmy GitHub Pages</p>\n<p>前两步忽略，只说第三步，添加SSH-Key。</p>\n<p>首先设置你的用户名密码：</p>\n<p>git config –global user.email “<a href=\"mailto:bu.ru@qq.com\">bu.ru@qq.com</a>“<br>git config –global user.name “bruce-sha”</p>\n<p>生成密钥：</p>\n<p>ssh-keygen -t rsa -C “<a href=\"mailto:bu.ru@qq.com\">bu.ru@qq.com</a>“</p>\n<p>输入文件路径：</p>\n<p>H:\\hexo\\blog&gt;ssh-keygen -t rsa -C “<a href=\"mailto:bu.ru@qq.com\">bu.ru@qq.com</a>“<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (//.ssh/id_rsa): H:\\git\\myssh\\ssh<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in H:\\git\\myssh\\ssh.<br>Your public key has been saved in H:\\git\\myssh\\ssh.pub.<br>The key fingerprint is:<br>b0:0c:2e:67:33:ab:c1:50:10:40:0a:ba:c1:80:59:22 <a href=\"mailto:bu.ru@qq.com\">bu.ru@qq.com</a></p>\n<p>有个bug，文件路径中的盘符H必须大写，否则会报错。</p>\n<p>上述命令若执行成功，会在H:\\git\\myssh目录下生成两个文件id_rsa和id_rsa.pub，最后两步：</p>\n<p>用文本编辑器打开ssh.pub文件，拷贝其中的内容，将其添加到Add SSH Key<br>将id_rsa和id_rsa.pub拷贝至你Git安装目录下的.ssh目录，如H:\\PortableGit-1.8.4.ssh<br>Add SSH KeysAdd SSH Keys</p>\n<p>最后可以验证一下：</p>\n<p>ssh -T <a href=\"mailto:git@github.com\">git@github.com</a></p>\n<p>若有问题，请重新设置。常见错误请参考：<br>GitHub Help - Generating SSH Keys<br>GitHub Help - Error Permission denied (publickey)</p>\n<p>安装<br>Node和Git都安装好后，可执行如下命令安装hexo：</p>\n<p>npm install -g hexo</p>\n<p>初始化<br>然后，执行init命令初始化hexo到你指定的目录：</p>\n<p>hexo init <folder><br>也可以cd到目标目录，执行hexo init。</p>\n<p>好啦，至此，全部安装工作已经完成！</p>\n<p>生成静态页面<br>cd 到你的init目录，执行如下命令，生成静态页面至hexo\\public\\目录。</p>\n<p>hexo generate</p>\n<p>命令必须在init目录下执行，否则不成功，但是也不报错。<br>当你修改文章Tag或内容，不能正确重新生成内容，可以删除hexo\\db.json后重试，还不行就到public目录删除对应的文件，重新生成。</p>\n<p>本地启动<br>执行如下命令，启动本地服务，进行文章预览调试。</p>\n<p>hexo server</p>\n<p>浏览器输入<a href=\"http://localhost:4000就可以看到效果。\" target=\"_blank\">http://localhost:4000就可以看到效果。</a></p>\n<p>请使用高级浏览器，否则可能…你懂的！</p>\n<p>写文章<br>执行new命令，生成指定名称的文章至hexo\\source_posts\\postName.md。</p>\n<p>hexo new [layout] “postName” #新建文章</p>\n<p>其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\\scaffolds\\post.md</p>\n<p>title: { { title } }<br>date: { { date } }<br>tags:</p>\n<hr>\n<p>请注意，大括号与大括号之间我多加了个空格，否则会被转义，不能正常显示。</p>\n<p>我想添加categories，以免每次手工输入，只需要修改这个文件添加一行，如下：</p>\n<p>title: { { title } }<br>date: { { date } }<br>categories:<br>tags: </p>\n<hr>\n<p>postName是md文件的名字，同时也出现在你文章的URL中，postName如果包含空格，必须用”将其包围，postName可以为中文。</p>\n<p>注意，所有文件：后面都必须有个空格，不然会报错。</p>\n<p>看一下刚才生成的文件hexo\\source_posts\\postName.md，内容如下：</p>\n<p>title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: #文章分类目录，可以为空，注意:后面有个空格<br>tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</p>\n<hr>\n<p>这里开始使用markdown格式输入你的正文。</p>\n<p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。关于markdown语法，可以参考我的文章Markdown简明语法。</p>\n<p>fancybox<br>可能有人对这个Reading页面中图片的fancybox效果感兴趣，这个是怎么做的呢。<br>很简单，只需要在你的文章*.md文件的头上添加photos项即可，然后一行行添加你要展示的照片：</p>\n<p>layout: photo<br>title: 我的阅历<br>date: 2085-01-16 07:33:44<br>tags: [hexo]<br>photos:</p>\n<ul><li><a href=\"http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg\" target=\"_blank\">http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg</a></li>\n<li><a href=\"http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg\" target=\"_blank\">http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg</a></li>\n</ul><p>经过测试，文件头上的layout: photo可以省略。</p>\n<p>不想每次都手动添加怎么办？同样的，打开您的hexo\\scaffolds\\photo.md</p>\n<p>layout: { { layout } }<br>title: { { title } }<br>date: { { date } }<br>tags:<br>photos: </p>\n<ul><li></li>\n<li>–</li>\n</ul><p>然后每次可以执行带layout的new命令生成照片文章：</p>\n<p>hexo new photo “photoPostName” #新建照片文章</p>\n<p>description<br>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文_config.yml的介绍。</p>\n<p>title: hexo你的博客<br>date: 2013-11-22 17:11:54<br>categories: default<br>tags: [hexo]<br>description: 你对本页的描述</p>\n<hr>\n<p>hexo默认会处理全部markdown和html文件，如果不想让hexo处理你的文件，可以在文件头中加入layout: false。</p>\n<p>文章摘要<br>在需要显示摘要的地方添加如下代码即可：</p>\n<p>以上是摘要</p>","link":"2020/04/17/hexo详解","tags":["Blog"],"categories":["博客"]},{"title":"hexo搭建+Butterfly主题配置","date":"2020-04-15T07:01:53.000Z","date_formatted":{"ll":"Apr 15, 2020","L":"04/15/2020","MM-DD":"04-15"},"excerpt":"","link":"2020/04/15/hexo搭建+Butterfly主题配置","tags":["Blog"],"categories":["博客"]},{"title":"hexo的目录结构[转载]","date":"2020-04-13T06:21:52.000Z","date_formatted":{"ll":"Apr 13, 2020","L":"04/13/2020","MM-DD":"04-13"},"excerpt":"","link":"2020/04/13/hexo的目录结构","tags":["Blog"],"categories":["博客"]},{"title":"Markdown教程","date":"2020-04-12T04:41:40.000Z","date_formatted":{"ll":"Apr 12, 2020","L":"04/12/2020","MM-DD":"04-12"},"excerpt":"","link":"2020/04/12/Markdown教程","tags":["Markdown"],"categories":["博客"]}]}