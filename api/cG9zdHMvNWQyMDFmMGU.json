{"title":"ACM数据结构","date":"2020-10-24T07:13:14.000Z","date_formatted":{"ll":"2020年10月24日","L":"2020/10/24","MM-DD":"10-24"},"link":"posts/5d201f0e","comments":true,"tags":["ACM"],"categories":["数据结构"],"updated":"2020-10-24T14:24:16.933Z","content":"<h2 id=\"顺序表应用1：多余元素删除之移位算法\">顺序表应用1：多余元素删除之移位算法<a href=\"#顺序表应用1：多余元素删除之移位算法\" title=\"顺序表应用1：多余元素删除之移位算法\"></a></h2><h3 id=\"description\">Description<a href=\"#description\" title=\"Description\"></a></h3><p>一个长度不超过10000数据的顺序表，可能存在着一些值相同的“多余”数据元素（类型为整型），编写一个程序将“多余”的数据元素从顺序表中删除，使该表由一个“非纯表”（值相同的元素在表中可能有多个）变成一个“纯表”（值相同的元素在表中只保留第一个）。</p>\n<p>要求：</p>\n<p>1、必须先定义线性表的结构与操作函数，在主函数中借助该定义与操作函数调用实现问题功能；</p>\n<p>2、本题的目标是熟悉顺序表的移位算法，因此题目必须要用元素的移位实现删除；</p>\n<h3 id=\"input\">Input<a href=\"#input\" title=\"Input\"></a></h3><p>第一行输入整数n，代表下面有n行输入；</p>\n<p>之后输入n行，每行先输入整数m，之后输入m个数据，代表对应顺序表的每个元素。</p>\n<h3 id=\"output\">Output<a href=\"#output\" title=\"Output\"></a></h3><p>输出有n行，为每个顺序表删除多余元素后的结果</p>\n<h3 id=\"sample\">Sample<a href=\"#sample\" title=\"Sample\"></a></h3><h4 id=\"input-1\">Input<a href=\"#input-1\" title=\"Input\"></a></h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">6</span> <span class=\"number\">9</span> <span class=\"number\">6</span> <span class=\"number\">8</span> <span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> <span class=\"number\">6</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">10</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure><h4 id=\"output-1\">Output<a href=\"#output-1\" title=\"Output\"></a></h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> <span class=\"number\">9</span> <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> <span class=\"number\">6</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span></span><br></pre></td></tr></table></figure><h3 id=\"answer\">Answer<a href=\"#answer\" title=\"Answer\"></a></h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data[<span class=\"number\">10010</span>];</span><br><span class=\"line\">&#125;SL;            <span class=\"comment\">//定义顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">creatlist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t    &#123;</span><br><span class=\"line\">\t        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;l-&gt;data[i]);</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">&#125;               <span class=\"comment\">//创建顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">deletelist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j,k;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n<span class=\"number\">-1</span>;i++)</span><br><span class=\"line\">\t        <span class=\"keyword\">for</span>( j=i+<span class=\"number\">1</span>;j&lt;n;j++)  <span class=\"comment\">//循环遍历</span></span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t          <span class=\"keyword\">if</span>(l-&gt;data[i]==l-&gt;data[j])</span><br><span class=\"line\">\t            &#123;</span><br><span class=\"line\">\t                n--;</span><br><span class=\"line\">\t                <span class=\"keyword\">for</span>( k=j;k&lt;n;k++)  <span class=\"comment\">//将后面的移到前面</span></span><br><span class=\"line\">\t                    l-&gt;data[k]=l-&gt;data[k+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t                j--;</span><br><span class=\"line\">\t            &#125;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;               <span class=\"comment\">//删除重复元素</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">printlist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t        <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,l-&gt;data[i]);</span><br><span class=\"line\">\t        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,l-&gt;data[i]);</span><br><span class=\"line\">&#125;               <span class=\"comment\">//输出顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">        SL l;</span><br><span class=\"line\">        creatlist(&amp;l,m);</span><br><span class=\"line\">        m=deletelist(&amp;l,m);</span><br><span class=\"line\">        printlist(&amp;l,m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"顺序表应用5：有序顺序表归并\">顺序表应用5：有序顺序表归并<a href=\"#顺序表应用5：有序顺序表归并\" title=\"顺序表应用5：有序顺序表归并\"></a></h2><h3 id=\"description-1\">Description<a href=\"#description-1\" title=\"Description\"></a></h3><p>已知顺序表A与B是两个有序的顺序表，其中存放的数据元素皆为普通整型，将A与B表归并为C表，要求C表包含了A、B表里所有元素，并且C表仍然保持有序。</p>\n<h3 id=\"input-2\">Input<a href=\"#input-2\" title=\"Input\"></a></h3><p>输入分为三行：<br>第一行输入m、n（1&lt;=m,n&lt;=10000）的值，即为表A、B的元素个数；<br>第二行输入m个有序的整数，即为表A的每一个元素；<br>第三行输入n个有序的整数，即为表B的每一个元素；</p>\n<h3 id=\"output-2\">Output<a href=\"#output-2\" title=\"Output\"></a></h3><p>输出为一行，即将表A、B合并为表C后，依次输出表C所存放的元素。</p>\n<h3 id=\"sample-1\">Sample<a href=\"#sample-1\" title=\"Sample\"></a></h3><h4 id=\"input-3\">Input<a href=\"#input-3\" title=\"Input\"></a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 3</span><br><span class=\"line\">1 3 5 6 9</span><br><span class=\"line\">2 4 10</span><br></pre></td></tr></table></figure><h4 id=\"output-3\">Output<a href=\"#output-3\" title=\"Output\"></a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5 6 9 10</span><br></pre></td></tr></table></figure><h3 id=\"answer-1\">Answer<a href=\"#answer-1\" title=\"Answer\"></a></h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MaxSize 100001</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> element;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">List</span>&#123;</span></span><br><span class=\"line\">    element data[MaxSize];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> <span class=\"built_in\">size</span>;</span><br><span class=\"line\">&#125;<span class=\"built_in\">list</span>,list1,list2,list3;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b,list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a;i++)&#123;</span><br><span class=\"line\">        l1.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l1.<span class=\"built_in\">size</span> = a;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; b;i++)&#123;</span><br><span class=\"line\">        l2.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l2.<span class=\"built_in\">size</span> = b;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a + b;i++)&#123;</span><br><span class=\"line\">        l3.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l3.<span class=\"built_in\">size</span> = a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a;i++)&#123;\t\t<span class=\"comment\">//对顺序表A赋值 </span></span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; j;</span><br><span class=\"line\">        l1.data[i] = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; b;i++)&#123;\t<span class=\"comment\">//对顺序表B赋值 </span></span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; j;</span><br><span class=\"line\">        l2.data[i] = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> aa = <span class=\"number\">0</span>,bb = <span class=\"number\">0</span>,index=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c = l1.<span class=\"built_in\">size</span> + l2.<span class=\"built_in\">size</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(c--)&#123; \t<span class=\"comment\">//a b对比 将较小值放到前面 </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = (aa &gt;= l1.<span class=\"built_in\">size</span> ? <span class=\"number\">65535</span> : l1.data[aa]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b = (bb &gt;= l2.<span class=\"built_in\">size</span> ? <span class=\"number\">65535</span> : l2.data[bb]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b)&#123;</span><br><span class=\"line\">            l3.data[index++] = b;</span><br><span class=\"line\">            bb++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            l3.data[index++] = a;</span><br><span class=\"line\">            aa++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">output</span><span class=\"params\">(list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span> ; i &lt; l3.<span class=\"built_in\">size</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,l3.data[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">    list1 l1;</span><br><span class=\"line\">    list2 l2;</span><br><span class=\"line\">    list3 l3;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    init(l1,l2,a,b,l3);\t<span class=\"comment\">//初始化 </span></span><br><span class=\"line\">    input(l1,l2,a,b);\t<span class=\"comment\">//负值 </span></span><br><span class=\"line\">    merge(l1,l2,l3);\t</span><br><span class=\"line\">    output(l3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"串、数组和广义表","link":"posts/32c38e43"},"next":{"title":"栈和队列","link":"posts/8d66b5f2"},"plink":"https://dxsummer.gitee.io/posts/5d201f0e/","toc":[{"id":"顺序表应用1：多余元素删除之移位算法","title":"顺序表应用1：多余元素删除之移位算法","index":"1","children":[{"id":"description","title":"Description","index":"1.1"},{"id":"input","title":"Input","index":"1.2"},{"id":"output","title":"Output","index":"1.3"},{"id":"sample","title":"Sample","index":"1.4","children":[{"id":"input-1","title":"Input","index":"1.4.1"},{"id":"output-1","title":"Output","index":"1.4.2"}]},{"id":"answer","title":"Answer","index":"1.5"}]},{"id":"顺序表应用5：有序顺序表归并","title":"顺序表应用5：有序顺序表归并","index":"2","children":[{"id":"description-1","title":"Description","index":"2.1"},{"id":"input-2","title":"Input","index":"2.2"},{"id":"output-2","title":"Output","index":"2.3"},{"id":"sample-1","title":"Sample","index":"2.4","children":[{"id":"input-3","title":"Input","index":"2.4.1"},{"id":"output-3","title":"Output","index":"2.4.2"}]},{"id":"answer-1","title":"Answer","index":"2.5"}]}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/5d201f0e/\" title=\"ACM数据结构\">https://dxsummer.gitee.io/posts/5d201f0e/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2020年10月24日","updated":"2020年10月24日"}}