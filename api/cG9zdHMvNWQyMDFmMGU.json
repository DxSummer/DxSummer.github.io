{"title":"ACM数据结构","date":"2020-10-24T07:13:14.000Z","date_formatted":{"ll":"2020年10月24日","L":"2020/10/24","MM-DD":"10-24"},"link":"posts/5d201f0e","comments":true,"tags":["ACM"],"categories":["数据结构"],"updated":"2020-11-21T07:03:44.187Z","content":"<h1 id=\"顺序表应用\">顺序表应用<a href=\"#顺序表应用\" title=\"顺序表应用\"></a></h1><h2 id=\"多余元素删除之移位算法\">多余元素删除之移位算法<a href=\"#多余元素删除之移位算法\" title=\"多余元素删除之移位算法\"></a></h2><p><strong>Description</strong></p>\n<p>一个长度不超过10000数据的顺序表，可能存在着一些值相同的“多余”数据元素（类型为整型），编写一个程序将“多余”的数据元素从顺序表中删除，使该表由一个“非纯表”（值相同的元素在表中可能有多个）变成一个“纯表”（值相同的元素在表中只保留第一个）。</p>\n<p>要求：</p>\n<p>1、必须先定义线性表的结构与操作函数，在主函数中借助该定义与操作函数调用实现问题功能；</p>\n<p>2、本题的目标是熟悉顺序表的移位算法，因此题目必须要用元素的移位实现删除；</p>\n<p><strong>Input</strong></p>\n<p>第一行输入整数n，代表下面有n行输入；</p>\n<p>之后输入n行，每行先输入整数m，之后输入m个数据，代表对应顺序表的每个元素。</p>\n<p><strong>Output</strong></p>\n<p>输出有n行，为每个顺序表删除多余元素后的结果</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">6</span> <span class=\"number\">9</span> <span class=\"number\">6</span> <span class=\"number\">8</span> <span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> <span class=\"number\">6</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">10</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">5</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">1</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">6</span> <span class=\"number\">9</span> <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">9</span> <span class=\"number\">8</span> <span class=\"number\">7</span> <span class=\"number\">6</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span></span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data[<span class=\"number\">10010</span>];</span><br><span class=\"line\">&#125;SL;            <span class=\"comment\">//定义顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">creatlist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t    &#123;</span><br><span class=\"line\">\t        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;l-&gt;data[i]);</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">&#125;               <span class=\"comment\">//创建顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">deletelist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,j,k;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n<span class=\"number\">-1</span>;i++)</span><br><span class=\"line\">\t        <span class=\"keyword\">for</span>( j=i+<span class=\"number\">1</span>;j&lt;n;j++)  <span class=\"comment\">//循环遍历</span></span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t          <span class=\"keyword\">if</span>(l-&gt;data[i]==l-&gt;data[j])</span><br><span class=\"line\">\t            &#123;</span><br><span class=\"line\">\t                n--;</span><br><span class=\"line\">\t                <span class=\"keyword\">for</span>( k=j;k&lt;n;k++)  <span class=\"comment\">//将后面的移到前面</span></span><br><span class=\"line\">\t                    l-&gt;data[k]=l-&gt;data[k+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t                j--;</span><br><span class=\"line\">\t            &#125;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;               <span class=\"comment\">//删除重复元素</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">printlist</span><span class=\"params\">(SL *l,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t        <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,l-&gt;data[i]);</span><br><span class=\"line\">\t        <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,l-&gt;data[i]);</span><br><span class=\"line\">&#125;               <span class=\"comment\">//输出顺序表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">        SL l;</span><br><span class=\"line\">        creatlist(&amp;l,m);</span><br><span class=\"line\">        m=deletelist(&amp;l,m);</span><br><span class=\"line\">        printlist(&amp;l,m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"有序顺序表归并\">有序顺序表归并<a href=\"#有序顺序表归并\" title=\"有序顺序表归并\"></a></h2><p><strong>Description</strong></p>\n<p>已知顺序表A与B是两个有序的顺序表，其中存放的数据元素皆为普通整型，将A与B表归并为C表，要求C表包含了A、B表里所有元素，并且C表仍然保持有序。</p>\n<p><strong>Input</strong></p>\n<p>输入分为三行：<br>第一行输入m、n（1&lt;=m,n&lt;=10000）的值，即为表A、B的元素个数；<br>第二行输入m个有序的整数，即为表A的每一个元素；<br>第三行输入n个有序的整数，即为表B的每一个元素；</p>\n<p><strong>Output</strong></p>\n<p>输出为一行，即将表A、B合并为表C后，依次输出表C所存放的元素。</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 3</span><br><span class=\"line\">1 3 5 6 9</span><br><span class=\"line\">2 4 10</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5 6 9 10</span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MaxSize 100001</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> element;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">List</span>&#123;</span></span><br><span class=\"line\">    element data[MaxSize];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> <span class=\"built_in\">size</span>;</span><br><span class=\"line\">&#125;<span class=\"built_in\">list</span>,list1,list2,list3;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b,list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a;i++)&#123;</span><br><span class=\"line\">        l1.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l1.<span class=\"built_in\">size</span> = a;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; b;i++)&#123;</span><br><span class=\"line\">        l2.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l2.<span class=\"built_in\">size</span> = b;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a + b;i++)&#123;</span><br><span class=\"line\">        l3.data[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    l3.<span class=\"built_in\">size</span> = a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; a;i++)&#123;\t\t<span class=\"comment\">//对顺序表A赋值 </span></span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; j;</span><br><span class=\"line\">        l1.data[i] = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; b;i++)&#123;\t<span class=\"comment\">//对顺序表B赋值 </span></span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; j;</span><br><span class=\"line\">        l2.data[i] = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(list1 &amp;l1,list2 &amp;l2,list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> aa = <span class=\"number\">0</span>,bb = <span class=\"number\">0</span>,index=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c = l1.<span class=\"built_in\">size</span> + l2.<span class=\"built_in\">size</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(c--)&#123; \t<span class=\"comment\">//a b对比 将较小值放到前面 </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a = (aa &gt;= l1.<span class=\"built_in\">size</span> ? <span class=\"number\">65535</span> : l1.data[aa]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b = (bb &gt;= l2.<span class=\"built_in\">size</span> ? <span class=\"number\">65535</span> : l2.data[bb]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b)&#123;</span><br><span class=\"line\">            l3.data[index++] = b;</span><br><span class=\"line\">            bb++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            l3.data[index++] = a;</span><br><span class=\"line\">            aa++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">output</span><span class=\"params\">(list3 &amp;l3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span> ; i &lt; l3.<span class=\"built_in\">size</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,l3.data[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">    list1 l1;</span><br><span class=\"line\">    list2 l2;</span><br><span class=\"line\">    list3 l3;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    init(l1,l2,a,b,l3);\t<span class=\"comment\">//初始化 </span></span><br><span class=\"line\">    input(l1,l2,a,b);\t<span class=\"comment\">//负值 </span></span><br><span class=\"line\">    merge(l1,l2,l3);\t</span><br><span class=\"line\">    output(l3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"有序顺序表查询\">有序顺序表查询<a href=\"#有序顺序表查询\" title=\"有序顺序表查询\"></a></h2><p><strong>Description</strong></p>\n<p>顺序表内按照由小到大的次序存放着n个互不相同的整数，任意输入一个整数，判断该整数在顺序表中是否存在。如果在顺序表中存在该整数，输出其在表中的序号；否则输出“No Found!”。</p>\n<p><strong>Input</strong></p>\n<p>第一行输入整数n (1 &lt;= n &lt;= 100000)，表示顺序表的元素个数；<br>第二行依次输入n个各不相同的有序非负整数，代表表里的元素；<br>第三行输入整数t (1 &lt;= t &lt;= 100000)，代表要查询的次数；<br>第四行依次输入t个非负整数，代表每次要查询的数值。</p>\n<p>保证所有输入的数都在 int 范围内。</p>\n<p><strong>Output</strong></p>\n<p>输出t行，代表t次查询的结果，如果找到在本行输出该元素在表中的位置，否则本行输出No Found!</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">1 22 33 55 63 70 74 79 80 87</span><br><span class=\"line\">4</span><br><span class=\"line\">55 10 2 87</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">No Found!</span><br><span class=\"line\">No Found!</span><br><span class=\"line\">10</span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> max 100005</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> length;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> listsize;</span><br><span class=\"line\">&#125;List;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">creat</span><span class=\"params\">(List &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\tL.elem=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"built_in\">max</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!L.elem) <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;L.elem[i];</span><br><span class=\"line\">\t\tL.length++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">search</span><span class=\"params\">(List L,<span class=\"keyword\">int</span> left,<span class=\"keyword\">int</span> right,<span class=\"keyword\">int</span> num)</span>             <span class=\"comment\">//由于时间限制，必须用到二分查找。</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(left&lt;=right)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid=(left+right)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(L.elem[mid]&lt;num)</span><br><span class=\"line\">            left=mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (L.elem[mid]&gt;num)</span><br><span class=\"line\">            right=mid<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,m,x;</span><br><span class=\"line\">\tList L;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\tcreat(L,n);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> loc=search(L,<span class=\"number\">0</span>,n,x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(loc)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;loc&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No Found!\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h1 id=\"链表\">链表<a href=\"#链表\" title=\"链表\"></a></h1><h2 id=\"链表的逆置\">链表的逆置<a href=\"#链表的逆置\" title=\"链表的逆置\"></a></h2><p><strong>Description</strong></p>\n<p>输入多个整数，以-1作为结束标志，顺序建立一个带头结点的单链表，之后对该单链表的数据进行逆置，并输出逆置后的单链表数据。</p>\n<p><strong>Input</strong></p>\n<p>输入多个整数，以-1作为结束标志。</p>\n<p><strong>Output</strong></p>\n<p>输出逆置后的单链表数据。</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12 56 4 6 55 15 33 62 -1</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">62 33 15 55 6 4 56 12</span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//逆序建立链表</span></span><br><span class=\"line\"><span class=\"function\">struct node *<span class=\"title\">Creat</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>,*<span class=\"title\">p</span>;</span></span><br><span class=\"line\">    head=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">    head-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;data);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;data!=<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p-&gt;next=head-&gt;next;</span><br><span class=\"line\">        head-&gt;next=p;</span><br><span class=\"line\">        p=(struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (head);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>;</span></span><br><span class=\"line\">    head=Creat();</span><br><span class=\"line\"><span class=\"comment\">//    if(head-&gt;next!=NULL)</span></span><br><span class=\"line\"><span class=\"comment\">//    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        printf(\"%d\",head-&gt;next-&gt;data);</span></span><br><span class=\"line\"><span class=\"comment\">//        head=head-&gt;next;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(head-&gt;next!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,head-&gt;next-&gt;data);</span><br><span class=\"line\">        head=head-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"链表的逆置-1\">链表的逆置<a href=\"#链表的逆置-1\" title=\"链表的逆置\"></a></h2><p><strong>Description</strong></p>\n<p>输入多个整数，以-1作为结束标志，顺序建立一个带头结点的单链表，之后对该单链表的数据进行逆置，并输出逆置后的单链表数据。</p>\n<p><strong>Input</strong></p>\n<p>输入多个整数，以-1作为结束标志。</p>\n<p><strong>Output</strong></p>\n<p>输出逆置后的单链表数据。</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12 56 4 6 55 15 33 62 -1</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">62 33 15 55 6 4 56 12</span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> date;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>,*<span class=\"title\">p</span>,*<span class=\"title\">tail</span>;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    head = <span class=\"keyword\">new</span> node;</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    tail = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n; i++)\t<span class=\"comment\">//录入数据 </span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = <span class=\"keyword\">new</span> node;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;date);</span><br><span class=\"line\">        p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        tail-&gt;next = p;</span><br><span class=\"line\">        tail = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m;<span class=\"comment\">//要删除的数字</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t=<span class=\"number\">0</span>;<span class=\"comment\">//要删除的数字的个数</span></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,n);</span><br><span class=\"line\">    p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;next)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,p-&gt;date);</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,p-&gt;date);</span><br><span class=\"line\">    p = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;next)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(p-&gt;next-&gt;date==m)<span class=\"comment\">//前移 </span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t++;</span><br><span class=\"line\">            tail = p-&gt;next;</span><br><span class=\"line\">            p-&gt;next = tail-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span>(tail);<span class=\"comment\">//释放指针指向的内存地址 </span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,n-t);<span class=\"comment\">//剩余 </span></span><br><span class=\"line\">    p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p-&gt;next)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,p-&gt;date);</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,p-&gt;date);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2 id=\"顺序建立链表\">顺序建立链表<a href=\"#顺序建立链表\" title=\"顺序建立链表\"></a></h2><p><strong>Description</strong></p>\n<p>输入N个整数，按照输入的顺序建立单链表存储，并遍历所建立的单链表，输出这些数据。</p>\n<p><strong>Input</strong></p>\n<p>第一行输入整数的个数N；<br>第二行依次输入每个整数。</p>\n<p><strong>Output</strong></p>\n<p>输出这组整数。</p>\n<p><strong>Sample</strong></p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br><span class=\"line\">12 56 4 6 55 15 33 62</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12 56 4 6 55 15 33 62</span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">head</span>,*<span class=\"title\">p</span>,*<span class=\"title\">tail</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,i;</span><br><span class=\"line\">    head = (struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    tail = head;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p = (struct node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct node));</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;data);</span><br><span class=\"line\">        p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        tail-&gt;next = p;</span><br><span class=\"line\">        tail = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">q</span>;</span></span><br><span class=\"line\">    q = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(q-&gt;next != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">           &#123;</span><br><span class=\"line\">           <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,q-&gt;data);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,q-&gt;data);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">        q = q-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h1 id=\"栈\">栈<a href=\"#栈\" title=\"栈\"></a></h1><h2 id=\"一般算术表达式转换成后缀式\">一般算术表达式转换成后缀式<a href=\"#一般算术表达式转换成后缀式\" title=\"一般算术表达式转换成后缀式\"></a></h2><p><strong>Description</strong></p>\n<p>对于一个基于二元运算符的算术表达式，转换为对应的后缀式，并输出之。</p>\n<p><strong>Input</strong></p>\n<p>输入一个算术表达式，以‘#’字符作为结束标志。</p>\n<p><strong>Output</strong></p>\n<p>输出该表达式转换所得到的后缀式。</p>\n<p><strong>Input</strong> </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a*b+(c-d/e)*f#</span><br></pre></td></tr></table></figure><p><strong>Output</strong> </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ab*cde/-f*+</span><br></pre></td></tr></table></figure><p><strong>Answer c++</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">char</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a == <span class=\"string\">'-'</span> || a == <span class=\"string\">'+'</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a == <span class=\"string\">'*'</span> || a == <span class=\"string\">'/'</span>) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a == <span class=\"string\">')'</span>) <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a == <span class=\"string\">'('</span>) <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> * base;</span><br><span class=\"line\">    <span class=\"keyword\">char</span>  *top;</span><br><span class=\"line\">&#125;SqStack;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">1000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitStack</span><span class=\"params\">(SqStack &amp;S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    S.base = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">1000</span>*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">    S.top = S.base;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">(SqStack &amp;S, <span class=\"keyword\">char</span>  e)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    *S.top++ = e;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pop</span><span class=\"params\">(SqStack &amp;S)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> e;</span><br><span class=\"line\">    e = *--S.top;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; e;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, a))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">        SqStack S;</span><br><span class=\"line\">        InitStack(S);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; a[i]!=<span class=\"string\">'#'</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i] &gt;= <span class=\"string\">'a'</span> &amp;&amp; a[i] &lt;= <span class=\"string\">'z'</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; a[i];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(S.base == S.top)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Push(S, a[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(cmp(*(S.top<span class=\"number\">-1</span>)) &gt;= cmp(a[i]))</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(*(S.top<span class=\"number\">-1</span>) != <span class=\"string\">'('</span>)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                              Pop(S);</span><br><span class=\"line\">                              Push(S, a[i]);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                       <span class=\"keyword\">else</span></span><br><span class=\"line\">                       &#123;</span><br><span class=\"line\">                             Push(S, a[i]);</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">if</span>(a[i] == <span class=\"string\">')'</span>)</span><br><span class=\"line\">                       &#123;</span><br><span class=\"line\">                           <span class=\"keyword\">while</span>(*(S.top<span class=\"number\">-1</span>) != <span class=\"string\">'('</span>)</span><br><span class=\"line\">                           &#123;</span><br><span class=\"line\">                               Pop(S);</span><br><span class=\"line\">                           &#125;</span><br><span class=\"line\">                           S.top--;</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                       <span class=\"keyword\">else</span></span><br><span class=\"line\">                       &#123;</span><br><span class=\"line\">                           Push(S, a[i]);</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(S.top != S.base)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Pop(S);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"串、数组和广义表","link":"posts/32c38e43"},"next":{"title":"栈和队列","link":"posts/8d66b5f2"},"plink":"https://dxsummer.gitee.io/posts/5d201f0e/","toc":[{"id":"顺序表应用","title":"顺序表应用","index":"1","children":[{"id":"多余元素删除之移位算法","title":"多余元素删除之移位算法","index":"1.1"},{"id":"有序顺序表归并","title":"有序顺序表归并","index":"1.2"},{"id":"有序顺序表查询","title":"有序顺序表查询","index":"1.3"}]},{"id":"链表","title":"链表","index":"2","children":[{"id":"链表的逆置","title":"链表的逆置","index":"2.1"},{"id":"链表的逆置-1","title":"链表的逆置","index":"2.2"},{"id":"顺序建立链表","title":"顺序建立链表","index":"2.3"}]},{"id":"栈","title":"栈","index":"3","children":[{"id":"一般算术表达式转换成后缀式","title":"一般算术表达式转换成后缀式","index":"3.1"}]}],"reward":true,"copyright":{"author":"DxSummer","link":"<a href=\"https://dxsummer.gitee.io/posts/5d201f0e/\" title=\"ACM数据结构\">https://dxsummer.gitee.io/posts/5d201f0e/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2020年10月24日","updated":"2020年11月21日"}}